{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\react\\\\my-app\\\\src\\\\components\\\\tooltip\\\\Tooltip.js\",\n    _s = $RefreshSig$();\n\n// 1. Tạo component có tên là Tooltip\n// 2. Component này có props children, props text\n// 3. Áp dụng portal để khi rê chuột vào text thì sẽ hiển thị tooltip content ở phía trên, và chính giữa đoạn text\n// 4. Dùng kiến thức đã học ở video trước sử dụng getBoundingClientRect()\nimport React, { useState } from \"react\";\nimport useHover from \"../../hooks/useHover\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tooltip = _ref => {\n  _s();\n\n  let {\n    children,\n    text\n  } = _ref;\n  const {\n    hovered,\n    nodeRef\n  } = useHover();\n  const [coords, setCoords] = useState({});\n\n  const handleHover = e => {\n    setCoords(e.target.getBoundingClientRect());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hovered && /*#__PURE__*/_jsxDEV(TooltipContent, {\n      coords: coords,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-semibold\",\n      ref: nodeRef,\n      onMouseOver: handleHover,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tooltip, \"iuRFASpjfnS5UwsJaG35gi9vlYc=\", false, function () {\n  return [useHover];\n});\n\n_c = Tooltip;\n\nfunction TooltipContent(_ref2) {\n  let {\n    children,\n    coords\n  } = _ref2;\n  console.log(\"TooltipContent ~ coords\", coords);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"p-3 bg-black text-white rounded-xl inline-block absolute -translate-y-full max-w-[200px] -translate-x-2/4\",\n    style: {\n      top: coords.top - coords.height / 2 + window.scrollY,\n      left: coords.left + coords.width / 2\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), document.querySelector(\"body\"));\n}\n\n_c2 = TooltipContent;\nexport default Tooltip;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tooltip\");\n$RefreshReg$(_c2, \"TooltipContent\");","map":{"version":3,"names":["React","useState","useHover","ReactDOM","Tooltip","children","text","hovered","nodeRef","coords","setCoords","handleHover","e","target","getBoundingClientRect","TooltipContent","console","log","createPortal","top","height","window","scrollY","left","width","document","querySelector"],"sources":["E:/fullstack/react/my-app/src/components/tooltip/Tooltip.js"],"sourcesContent":["// 1. Tạo component có tên là Tooltip\r\n// 2. Component này có props children, props text\r\n// 3. Áp dụng portal để khi rê chuột vào text thì sẽ hiển thị tooltip content ở phía trên, và chính giữa đoạn text\r\n// 4. Dùng kiến thức đã học ở video trước sử dụng getBoundingClientRect()\r\nimport React, { useState } from \"react\";\r\nimport useHover from \"../../hooks/useHover\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Tooltip = ({ children, text }) => {\r\n  const { hovered, nodeRef } = useHover();\r\n  const [coords, setCoords] = useState({});\r\n  const handleHover = (e) => {\r\n    setCoords(e.target.getBoundingClientRect());\r\n  };\r\n  return (\r\n    <div>\r\n      {hovered && <TooltipContent coords={coords}>{children}</TooltipContent>}\r\n      <span className=\"font-semibold\" ref={nodeRef} onMouseOver={handleHover}>\r\n        {text}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction TooltipContent({ children, coords }) {\r\n  console.log(\"TooltipContent ~ coords\", coords);\r\n  return ReactDOM.createPortal(\r\n    <p\r\n      className=\"p-3 bg-black text-white rounded-xl inline-block absolute -translate-y-full max-w-[200px] -translate-x-2/4\"\r\n      style={{\r\n        top: coords.top - coords.height / 2 + window.scrollY,\r\n        left: coords.left + coords.width / 2,\r\n      }}\r\n    >\r\n      {children}\r\n    </p>,\r\n    document.querySelector(\"body\")\r\n  );\r\n}\r\n\r\nexport default Tooltip;\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,OAAO,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,QAAF;IAAYC;EAAZ,CAAuB;EACtC,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAuBN,QAAQ,EAArC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;EACA,MAAMU,WAAW,GAAIC,CAAD,IAAO;IACzBF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,qBAAT,EAAD,CAAT;EACD,CAFD;;EAGA,oBACE;IAAA,WACGP,OAAO,iBAAI,QAAC,cAAD;MAAgB,MAAM,EAAEE,MAAxB;MAAA,UAAiCJ;IAAjC;MAAA;MAAA;MAAA;IAAA,QADd,eAEE;MAAM,SAAS,EAAC,eAAhB;MAAgC,GAAG,EAAEG,OAArC;MAA8C,WAAW,EAAEG,WAA3D;MAAA,UACGL;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAdD;;GAAMF,O;UACyBF,Q;;;KADzBE,O;;AAgBN,SAASW,cAAT,QAA8C;EAAA,IAAtB;IAAEV,QAAF;IAAYI;EAAZ,CAAsB;EAC5CO,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCR,MAAvC;EACA,oBAAON,QAAQ,CAACe,YAAT,eACL;IACE,SAAS,EAAC,2GADZ;IAEE,KAAK,EAAE;MACLC,GAAG,EAAEV,MAAM,CAACU,GAAP,GAAaV,MAAM,CAACW,MAAP,GAAgB,CAA7B,GAAiCC,MAAM,CAACC,OADxC;MAELC,IAAI,EAAEd,MAAM,CAACc,IAAP,GAAcd,MAAM,CAACe,KAAP,GAAe;IAF9B,CAFT;IAAA,UAOGnB;EAPH;IAAA;IAAA;IAAA;EAAA,QADK,EAULoB,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAVK,CAAP;AAYD;;MAdQX,c;AAgBT,eAAeX,OAAf"},"metadata":{},"sourceType":"module"}