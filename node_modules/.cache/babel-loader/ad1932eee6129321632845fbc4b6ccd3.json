{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\react\\\\my-app\\\\src\\\\components\\\\tictactoe\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport { calculateWinner } from \"../../helpers\";\nimport Board from \"./Board\";\nimport \"./GameStyle.css\"; // initialState ={}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  board: Array(9).fill(null),\n  xISNext: true\n};\n\nconst gameReducer = (state, action) => {\n  return state;\n};\n\nconst Game = () => {\n  _s();\n\n  // const [board, setboard] = useState(Array(9).fill(null));\n  // const [xISNext, setXIsNext] = useState(true);\n  // useReducer\n  const [state, dispatch] = useReducer(gameReducer, initialState); // const action = {type: \"CLICK\", payload:{}}\n  // dispath({typeL: 'CLICK'})\n  // const [state, setState] = useState({\n  //   board: Array(9).fill(null),\n  //   xISNext: true,\n  // });\n\n  const winner = calculateWinner(state.board);\n\n  const handleClick = index => {\n    const boardCopy = [...state.board];\n    if (winner || boardCopy[index]) return;\n    dispatch({\n      type: \"CLICK\",\n      payload: {\n        index\n      }\n    }); // boardCopy[index] = state.xISNext ? \"X\" : \"O\";\n    // setState({\n    //   ...state,\n    //   board: boardCopy,\n    //   xISNext: !state.xISNext,\n    // });\n    // setboard(boardCopy);\n    // setXIsNext((state.xISNext) => !state.xISNext);\n  };\n\n  const handleResteGame = () => {// setboard(Array(9).fill(null));\n    // setXIsNext(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: state.board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: [\"Winner is \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"game-reset\",\n      onClick: handleResteGame,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useReducer","useState","calculateWinner","Board","initialState","board","Array","fill","xISNext","gameReducer","state","action","Game","dispatch","winner","handleClick","index","boardCopy","type","payload","handleResteGame"],"sources":["E:/fullstack/react/my-app/src/components/tictactoe/Game.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport { calculateWinner } from \"../../helpers\";\r\nimport Board from \"./Board\";\r\nimport \"./GameStyle.css\";\r\n\r\n// initialState ={}\r\nconst initialState = {\r\n  board: Array(9).fill(null),\r\n  xISNext: true,\r\n};\r\n\r\nconst gameReducer = (state, action) => {\r\n  return state;\r\n};\r\n\r\nconst Game = () => {\r\n  // const [board, setboard] = useState(Array(9).fill(null));\r\n  // const [xISNext, setXIsNext] = useState(true);\r\n\r\n  // useReducer\r\n  const [state, dispatch] = useReducer(gameReducer, initialState);\r\n  // const action = {type: \"CLICK\", payload:{}}\r\n  // dispath({typeL: 'CLICK'})\r\n  // const [state, setState] = useState({\r\n  //   board: Array(9).fill(null),\r\n  //   xISNext: true,\r\n  // });\r\n  const winner = calculateWinner(state.board);\r\n  const handleClick = (index) => {\r\n    const boardCopy = [...state.board];\r\n    if (winner || boardCopy[index]) return;\r\n    dispatch({\r\n      type: \"CLICK\",\r\n      payload: {\r\n        index,\r\n      },\r\n    });\r\n    // boardCopy[index] = state.xISNext ? \"X\" : \"O\";\r\n    // setState({\r\n    //   ...state,\r\n    //   board: boardCopy,\r\n    //   xISNext: !state.xISNext,\r\n    // });\r\n    // setboard(boardCopy);\r\n    // setXIsNext((state.xISNext) => !state.xISNext);\r\n  };\r\n  const handleResteGame = () => {\r\n    // setboard(Array(9).fill(null));\r\n    // setXIsNext(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Board cells={state.board} onClick={handleClick}></Board>\r\n      {winner && <div className=\"game-winner\">Winner is {winner}</div>}\r\n      <button className=\"game-reset\" onClick={handleResteGame}>\r\n        Reset game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,iBAAP,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADY;EAEnBC,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,OAAOD,KAAP;AACD,CAFD;;AAIA,MAAME,IAAI,GAAG,MAAM;EAAA;;EACjB;EACA;EAEA;EACA,MAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBb,UAAU,CAACS,WAAD,EAAcL,YAAd,CAApC,CALiB,CAMjB;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMU,MAAM,GAAGZ,eAAe,CAACQ,KAAK,CAACL,KAAP,CAA9B;;EACA,MAAMU,WAAW,GAAIC,KAAD,IAAW;IAC7B,MAAMC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACL,KAAV,CAAlB;IACA,IAAIS,MAAM,IAAIG,SAAS,CAACD,KAAD,CAAvB,EAAgC;IAChCH,QAAQ,CAAC;MACPK,IAAI,EAAE,OADC;MAEPC,OAAO,EAAE;QACPH;MADO;IAFF,CAAD,CAAR,CAH6B,CAS7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAjBD;;EAkBA,MAAMI,eAAe,GAAG,MAAM,CAC5B;IACA;EACD,CAHD;;EAIA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,KAAK,EAAEV,KAAK,CAACL,KAApB;MAA2B,OAAO,EAAEU;IAApC;MAAA;MAAA;MAAA;IAAA,QADF,EAEGD,MAAM,iBAAI;MAAK,SAAS,EAAC,aAAf;MAAA,yBAAwCA,MAAxC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFb,eAGE;MAAQ,SAAS,EAAC,YAAlB;MAA+B,OAAO,EAAEM,eAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA5CD;;GAAMR,I;;KAAAA,I;AA8CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}