{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // Usage\n// Hook\n\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === \"undefined\") {\n      return initialValue;\n    }\n\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  }); // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n      setStoredValue(valueToStore); // Save to local storage\n\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n_s(useLocalStorage, \"Sc/fojU/LiyVTX5FPqPPtjyfVxw=\");","map":{"version":3,"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","window","item","localStorage","getItem","JSON","parse","error","console","log","setValue","value","valueToStore","Function","setItem","stringify"],"sources":["E:/fullstack/react/my-app/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState } from \"react\";\r\n// Usage\r\n// Hook\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    if (typeof window === \"undefined\") {\r\n      return initialValue;\r\n    }\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      if (typeof window !== \"undefined\") {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;AACA;;AACA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;EAAA;;EACzD;EACA;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;IACnD,IAAI,OAAOM,MAAP,KAAkB,WAAtB,EAAmC;MACjC,OAAOH,YAAP;IACD;;IACD,IAAI;MACF;MACA,MAAMI,IAAI,GAAGD,MAAM,CAACE,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb,CAFE,CAGF;;MACA,OAAOK,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsBJ,YAAjC;IACD,CALD,CAKE,OAAOS,KAAP,EAAc;MACd;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACA,OAAOT,YAAP;IACD;EACF,CAd6C,CAA9C,CAHyD,CAkBzD;EACA;;EACA,MAAMY,QAAQ,GAAIC,KAAD,IAAW;IAC1B,IAAI;MACF;MACA,MAAMC,YAAY,GAChBD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACZ,WAAD,CAAjC,GAAiDY,KADnD,CAFE,CAIF;;MACAX,cAAc,CAACY,YAAD,CAAd,CALE,CAMF;;MACA,IAAI,OAAOX,MAAP,KAAkB,WAAtB,EAAmC;QACjCA,MAAM,CAACE,YAAP,CAAoBW,OAApB,CAA4BjB,GAA5B,EAAiCQ,IAAI,CAACU,SAAL,CAAeH,YAAf,CAAjC;MACD;IACF,CAVD,CAUE,OAAOL,KAAP,EAAc;MACd;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAfD;;EAgBA,OAAO,CAACR,WAAD,EAAcW,QAAd,CAAP;AACD;;GArCuBd,e"},"metadata":{},"sourceType":"module"}