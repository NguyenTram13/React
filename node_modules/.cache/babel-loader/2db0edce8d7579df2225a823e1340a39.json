{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\react\\\\my-app\\\\src\\\\components\\\\tictactoe\\\\GameWithReducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport { calculateWinner } from \"../../helpers\";\nimport Board from \"./Board\";\nimport \"./GameStyles.css\"; // const obj1 = {\n//   name: 'evondev'\n// };\n// const obj2 = {\n//   name: 'tuan'\n// };\n// const obj3 = {...obj1, ...obj2};\n// initialState = {}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  boards: Array(9).fill(null),\n  xIsNext: true\n}; // immutable\n// [...arr] {...obj}\n// deep copy JSON.parse(JSON.stringify(obj))\n\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case \"CLICK\":\n      {\n        const {\n          board,\n          xIsNext\n        } = state;\n        const {\n          index,\n          winner\n        } = action.payload;\n        if (winner || board[index]) return state;\n        const nextState = JSON.parse(JSON.stringify(state)); // board[index] = state.xIsNext ? \"X\" : \"O\";\n\n        nextState.board[index] = xIsNext ? \"X\" : \"O\";\n        nextState.xIsNext = !xIsNext;\n        console.log(state);\n        return nextState;\n      }\n\n    case \"RESET\":\n      {\n        const nextState = JSON.parse(JSON.stringify(state));\n        nextState.board = Array(9).fill(null);\n        nextState.xIsNext = true;\n        return nextState;\n      }\n\n    default:\n      console.log(\"Error\");\n      break;\n  }\n\n  return state;\n};\n\nconst GameWithReducer = () => {\n  _s();\n\n  // useReducer\n  const [state, dispatch] = useReducer(gameReducer, initialState); // const action = {type: 'CLICK', payload: {}}\n  // dispatch({type: 'CLICK'})\n\n  const winner = calculateWinner(state.board);\n\n  const handleClick = index => {\n    dispatch({\n      type: \"CLICK\",\n      payload: {\n        index,\n        winner\n      }\n    });\n  };\n\n  const handleResetGame = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: state.board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: [\"Winner is \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"game-reset\",\n      onClick: handleResetGame,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameWithReducer, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GameWithReducer;\nexport default GameWithReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameWithReducer\");","map":{"version":3,"names":["React","useReducer","useState","calculateWinner","Board","initialState","boards","Array","fill","xIsNext","gameReducer","state","action","type","board","index","winner","payload","nextState","JSON","parse","stringify","console","log","GameWithReducer","dispatch","handleClick","handleResetGame"],"sources":["E:/fullstack/react/my-app/src/components/tictactoe/GameWithReducer.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport { calculateWinner } from \"../../helpers\";\nimport Board from \"./Board\";\nimport \"./GameStyles.css\";\n\n// const obj1 = {\n//   name: 'evondev'\n// };\n// const obj2 = {\n//   name: 'tuan'\n// };\n// const obj3 = {...obj1, ...obj2};\n// initialState = {}\nconst initialState = {\n  boards: Array(9).fill(null),\n  xIsNext: true,\n};\n// immutable\n// [...arr] {...obj}\n// deep copy JSON.parse(JSON.stringify(obj))\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case \"CLICK\": {\n      const { board, xIsNext } = state;\n      const { index, winner } = action.payload;\n      if (winner || board[index]) return state;\n      const nextState = JSON.parse(JSON.stringify(state));\n      // board[index] = state.xIsNext ? \"X\" : \"O\";\n      nextState.board[index] = xIsNext ? \"X\" : \"O\";\n      nextState.xIsNext = !xIsNext;\n      console.log(state);\n      return nextState;\n    }\n    case \"RESET\": {\n      const nextState = JSON.parse(JSON.stringify(state));\n      nextState.board = Array(9).fill(null);\n      nextState.xIsNext = true;\n      return nextState;\n    }\n\n    default:\n      console.log(\"Error\");\n      break;\n  }\n  return state;\n};\n\nconst GameWithReducer = () => {\n  // useReducer\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n  // const action = {type: 'CLICK', payload: {}}\n  // dispatch({type: 'CLICK'})\n\n  const winner = calculateWinner(state.board);\n  const handleClick = (index) => {\n    dispatch({\n      type: \"CLICK\",\n      payload: {\n        index,\n        winner,\n      },\n    });\n  };\n  const handleResetGame = () => {\n    dispatch({\n      type: \"RESET\",\n    });\n  };\n  return (\n    <div>\n      <Board cells={state.board} onClick={handleClick}></Board>\n      {winner && <div className=\"game-winner\">Winner is {winner}</div>}\n      <button className=\"game-reset\" onClick={handleResetGame}>\n        Reset game\n      </button>\n    </div>\n  );\n};\n\nexport default GameWithReducer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,kBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADW;EAEnBC,OAAO,EAAE;AAFU,CAArB,C,CAIA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,OAAL;MAAc;QACZ,MAAM;UAAEC,KAAF;UAASL;QAAT,IAAqBE,KAA3B;QACA,MAAM;UAAEI,KAAF;UAASC;QAAT,IAAoBJ,MAAM,CAACK,OAAjC;QACA,IAAID,MAAM,IAAIF,KAAK,CAACC,KAAD,CAAnB,EAA4B,OAAOJ,KAAP;QAC5B,MAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,KAAf,CAAX,CAAlB,CAJY,CAKZ;;QACAO,SAAS,CAACJ,KAAV,CAAgBC,KAAhB,IAAyBN,OAAO,GAAG,GAAH,GAAS,GAAzC;QACAS,SAAS,CAACT,OAAV,GAAoB,CAACA,OAArB;QACAa,OAAO,CAACC,GAAR,CAAYZ,KAAZ;QACA,OAAOO,SAAP;MACD;;IACD,KAAK,OAAL;MAAc;QACZ,MAAMA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,KAAf,CAAX,CAAlB;QACAO,SAAS,CAACJ,KAAV,GAAkBP,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAlB;QACAU,SAAS,CAACT,OAAV,GAAoB,IAApB;QACA,OAAOS,SAAP;MACD;;IAED;MACEI,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA;EArBJ;;EAuBA,OAAOZ,KAAP;AACD,CAzBD;;AA2BA,MAAMa,eAAe,GAAG,MAAM;EAAA;;EAC5B;EACA,MAAM,CAACb,KAAD,EAAQc,QAAR,IAAoBxB,UAAU,CAACS,WAAD,EAAcL,YAAd,CAApC,CAF4B,CAG5B;EACA;;EAEA,MAAMW,MAAM,GAAGb,eAAe,CAACQ,KAAK,CAACG,KAAP,CAA9B;;EACA,MAAMY,WAAW,GAAIX,KAAD,IAAW;IAC7BU,QAAQ,CAAC;MACPZ,IAAI,EAAE,OADC;MAEPI,OAAO,EAAE;QACPF,KADO;QAEPC;MAFO;IAFF,CAAD,CAAR;EAOD,CARD;;EASA,MAAMW,eAAe,GAAG,MAAM;IAC5BF,QAAQ,CAAC;MACPZ,IAAI,EAAE;IADC,CAAD,CAAR;EAGD,CAJD;;EAKA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,KAAK,EAAEF,KAAK,CAACG,KAApB;MAA2B,OAAO,EAAEY;IAApC;MAAA;MAAA;MAAA;IAAA,QADF,EAEGV,MAAM,iBAAI;MAAK,SAAS,EAAC,aAAf;MAAA,yBAAwCA,MAAxC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFb,eAGE;MAAQ,SAAS,EAAC,YAAlB;MAA+B,OAAO,EAAEW,eAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA9BD;;GAAMH,e;;KAAAA,e;AAgCN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}